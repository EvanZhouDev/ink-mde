{"version":3,"file":"lists-XHM8Wnjh.js","sources":["../src/vendor/extensions/lists.ts"],"sourcesContent":["import { syntaxTree } from '@codemirror/language'\nimport { RangeSet, StateField } from '@codemirror/state'\nimport type { EditorState, Extension, Range } from '@codemirror/state'\nimport { Decoration, EditorView, ViewPlugin } from '@codemirror/view'\nimport type { DecorationSet } from '@codemirror/view'\nimport { buildWidget } from '/lib/codemirror-kit'\n\nconst dotWidget = () => buildWidget({\n  eq: () => {\n    return false\n  },\n  toDOM: () => {\n    const span = document.createElement('span')\n\n    span.innerHTML = '&#x2022;'\n    span.setAttribute('aria-hidden', 'true')\n\n    return span\n  },\n})\n\nconst taskWidget = (isChecked: boolean) => buildWidget({\n  eq: (other) => {\n    return other.isChecked === isChecked\n  },\n  ignoreEvent: () => false,\n  isChecked,\n  toDOM: () => {\n    const input = document.createElement('input')\n\n    input.setAttribute('aria-hidden', 'true')\n    input.className = 'ink-mde-task-toggle'\n    input.type = 'checkbox'\n    input.checked = isChecked\n\n    return input\n  },\n})\n\nconst hasOverlap = (x1: number, x2: number, y1: number, y2: number) => {\n  return Math.max(x1, y1) <= Math.min(x2, y2)\n}\n\nconst isCursorInRange = (state: EditorState, from: number, to: number) => {\n  return state.selection.ranges.some((range) => {\n    return hasOverlap(from, to, range.from, range.to)\n  })\n}\n\nconst toggleTask = (view: EditorView, position: number) => {\n  const before = view.state.sliceDoc(position + 2, position + 5)\n\n  view.dispatch({\n    changes: {\n      from: position + 2,\n      to: position + 5,\n      insert: before === '[ ]' ? '[x]' : '[ ]',\n    },\n  })\n\n  return true\n}\n\nexport const lists = (): Extension => {\n  const dotDecoration = () => Decoration.replace({\n    widget: dotWidget(),\n  })\n\n  const taskDecoration = (isChecked: boolean) => Decoration.replace({\n    widget: taskWidget(isChecked),\n  })\n\n  const decorate = (state: EditorState) => {\n    const widgets: Range<Decoration>[] = []\n\n    syntaxTree(state).iterate({\n      enter: ({ type, from, to }) => {\n        if (type.name === 'ListMark' && !isCursorInRange(state, from, to)) {\n          const task = state.sliceDoc(to + 1, to + 4)\n\n          if (!['[ ]', '[x]'].includes(task)) {\n            const marker = state.sliceDoc(from, to)\n\n            if (['-', '*'].includes(marker)) {\n              widgets.push(dotDecoration().range(from, to))\n            }\n          }\n        }\n\n        if (type.name === 'TaskMarker' && !isCursorInRange(state, from - 2, to)) {\n          const task = state.sliceDoc(from, to)\n\n          widgets.push(taskDecoration(task === '[x]').range(from - 2, to))\n        }\n      },\n    })\n\n    return widgets.length > 0 ? RangeSet.of(widgets) : Decoration.none\n  }\n\n  const viewPlugin = ViewPlugin.define(() => ({}), {\n    eventHandlers: {\n      mousedown: (event, view) => {\n        const target = event.target as HTMLElement\n\n        if (target?.nodeName === 'INPUT' && target.classList.contains('ink-mde-task-toggle')) {\n          return toggleTask(view, view.posAtDOM(target))\n        }\n      },\n    },\n  })\n  const stateField = StateField.define<DecorationSet>({\n    create(state) {\n      return decorate(state)\n    },\n    update(_references, { state }) {\n      return decorate(state)\n    },\n    provide(field) {\n      return EditorView.decorations.from(field)\n    },\n  })\n\n  return [\n    viewPlugin,\n    stateField,\n  ]\n}\n"],"names":[],"mappings":"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"}
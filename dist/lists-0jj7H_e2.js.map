{"version":3,"file":"lists-0jj7H_e2.js","sources":["../src/vendor/extensions/lists.ts"],"sourcesContent":["import { syntaxTree } from '@codemirror/language'\nimport { RangeSet, StateField } from '@codemirror/state'\nimport type { EditorState, Extension, Range } from '@codemirror/state'\nimport { Decoration, EditorView, ViewPlugin } from '@codemirror/view'\nimport type { DecorationSet } from '@codemirror/view'\nimport { buildWidget } from '/lib/codemirror-kit'\n\nconst dotWidget = () => buildWidget({\n  eq: () => {\n    return false\n  },\n  toDOM: () => {\n    const span = document.createElement('span')\n\n    span.innerHTML = '&#x2022;'\n    span.setAttribute('aria-hidden', 'true')\n\n    return span\n  },\n})\n\nconst taskWidget = (isChecked: boolean) => buildWidget({\n  eq: (other) => {\n    return other.isChecked === isChecked\n  },\n  ignoreEvent: () => false,\n  isChecked,\n  toDOM: () => {\n    const input = document.createElement('input')\n\n    input.setAttribute('aria-hidden', 'true')\n    input.className = 'ink-mde-task-toggle'\n    input.type = 'checkbox'\n    input.checked = isChecked\n\n    return input\n  },\n})\n\nconst hasOverlap = (x1: number, x2: number, y1: number, y2: number) => {\n  return Math.max(x1, y1) <= Math.min(x2, y2)\n}\n\nconst isCursorInRange = (state: EditorState, from: number, to: number) => {\n  return state.selection.ranges.some((range) => {\n    return hasOverlap(from, to, range.from, range.to)\n  })\n}\n\nconst toggleTask = (view: EditorView, position: number) => {\n  const before = view.state.sliceDoc(position + 2, position + 5)\n\n  view.dispatch({\n    changes: {\n      from: position + 2,\n      to: position + 5,\n      insert: before === '[ ]' ? '[x]' : '[ ]',\n    },\n  })\n\n  return true\n}\n\nexport const lists = (): Extension => {\n  const dotDecoration = () => Decoration.replace({\n    widget: dotWidget(),\n  })\n\n  const taskDecoration = (isChecked: boolean) => Decoration.replace({\n    widget: taskWidget(isChecked),\n  })\n\n  const decorate = (state: EditorState) => {\n    const widgets: Range<Decoration>[] = []\n\n    syntaxTree(state).iterate({\n      enter: ({ type, from, to }) => {\n        if (type.name === 'ListMark' && !isCursorInRange(state, from, to)) {\n          const task = state.sliceDoc(to + 1, to + 4)\n\n          if (!['[ ]', '[x]'].includes(task)) {\n            const marker = state.sliceDoc(from, to)\n\n            if (['-', '*'].includes(marker)) {\n              widgets.push(dotDecoration().range(from, to))\n            }\n          }\n        }\n\n        if (type.name === 'TaskMarker' && !isCursorInRange(state, from - 2, to)) {\n          const task = state.sliceDoc(from, to)\n\n          widgets.push(taskDecoration(task === '[x]').range(from - 2, to))\n        }\n      },\n    })\n\n    return widgets.length > 0 ? RangeSet.of(widgets) : Decoration.none\n  }\n\n  const viewPlugin = ViewPlugin.define(() => ({}), {\n    eventHandlers: {\n      mousedown: (event, view) => {\n        const target = event.target as HTMLElement\n\n        if (target?.nodeName === 'INPUT' && target.classList.contains('ink-mde-task-toggle')) {\n          return toggleTask(view, view.posAtDOM(target))\n        }\n      },\n    },\n  })\n  const stateField = StateField.define<DecorationSet>({\n    create(state) {\n      return decorate(state)\n    },\n    update(_references, { state }) {\n      return decorate(state)\n    },\n    provide(field) {\n      return EditorView.decorations.from(field)\n    },\n  })\n\n  return [\n    viewPlugin,\n    stateField,\n  ]\n}\n"],"names":["dotWidget","buildWidget","span","taskWidget","isChecked","other","input","hasOverlap","x1","x2","y1","y2","isCursorInRange","state","from","to","range","toggleTask","view","position","before","lists","dotDecoration","Decoration","taskDecoration","decorate","widgets","syntaxTree","type","task","marker","RangeSet","viewPlugin","ViewPlugin","event","target","stateField","StateField","_references","field","EditorView"],"mappings":"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"}
{"version":3,"file":"images-xl1iIxYa.js","sources":["../src/vendor/extensions/images.ts"],"sourcesContent":["import { syntaxTree } from '@codemirror/language'\nimport type { EditorState, Extension, Range } from '@codemirror/state'\nimport { RangeSet, StateField } from '@codemirror/state'\nimport type { DecorationSet } from '@codemirror/view'\nimport { Decoration, EditorView, WidgetType } from '@codemirror/view'\n\ninterface ImageWidgetParams {\n  url: string,\n}\n\nclass ImageWidget extends WidgetType {\n  readonly url\n\n  constructor({ url }: ImageWidgetParams) {\n    super()\n\n    this.url = url\n  }\n\n  eq(imageWidget: ImageWidget) {\n    return imageWidget.url === this.url\n  }\n\n  toDOM() {\n    const container = document.createElement('div')\n    const backdrop = container.appendChild(document.createElement('div'))\n    const figure = backdrop.appendChild(document.createElement('figure'))\n    const image = figure.appendChild(document.createElement('img'))\n\n    container.setAttribute('aria-hidden', 'true')\n    container.className = 'cm-image-container'\n    backdrop.className = 'cm-image-backdrop'\n    figure.className = 'cm-image-figure'\n    image.className = 'cm-image-img'\n    image.src = this.url\n\n    container.style.paddingBottom = '0.5rem'\n    container.style.paddingTop = '0.5rem'\n\n    backdrop.classList.add('cm-image-backdrop')\n\n    backdrop.style.borderRadius = 'var(--ink-internal-border-radius)'\n    backdrop.style.display = 'flex'\n    backdrop.style.alignItems = 'center'\n    backdrop.style.justifyContent = 'center'\n    backdrop.style.overflow = 'hidden'\n    backdrop.style.maxWidth = '100%'\n\n    figure.style.margin = '0'\n\n    image.style.display = 'block'\n    image.style.maxHeight = 'var(--ink-internal-block-max-height)'\n    image.style.maxWidth = '100%'\n    image.style.width = '100%'\n\n    return container\n  }\n}\n\nexport const images = (): Extension => {\n  const imageRegex = /!\\[.*?\\]\\((?<url>.*?)\\)/\n\n  const imageDecoration = (imageWidgetParams: ImageWidgetParams) => Decoration.widget({\n    widget: new ImageWidget(imageWidgetParams),\n    side: -1,\n    block: true,\n  })\n\n  const decorate = (state: EditorState) => {\n    const widgets: Range<Decoration>[] = []\n\n    syntaxTree(state).iterate({\n      enter: ({ type, from, to }) => {\n        if (type.name === 'Image') {\n          const result = imageRegex.exec(state.doc.sliceString(from, to))\n\n          if (result && result.groups && result.groups.url)\n            widgets.push(imageDecoration({ url: result.groups.url }).range(state.doc.lineAt(from).from))\n        }\n      },\n    })\n\n    return widgets.length > 0 ? RangeSet.of(widgets) : Decoration.none\n  }\n\n  const imagesField = StateField.define<DecorationSet>({\n    create(state) {\n      return decorate(state)\n    },\n    update(images, transaction) {\n      if (transaction.docChanged)\n        return decorate(transaction.state)\n\n      return images.map(transaction.changes)\n    },\n    provide(field) {\n      return EditorView.decorations.from(field)\n    },\n  })\n\n  return [\n    imagesField,\n  ]\n}\n"],"names":["images"],"mappings":"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"}